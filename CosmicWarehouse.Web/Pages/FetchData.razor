@page "/fetchdata"

@using Models
@using CosmicWarehouse.Domain.ViewModels

@inject IHttpClientFactory _clientFactory
 
<h1>Stock</h1>

@if (stockItems is null)
{
    <p><em>Loading...</em></p>
}
else if(!string.IsNullOrEmpty(errorString))
{
    <p>
        <div class="alert-danger">{{errorString}}</div>
    </p>
}
else
{
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Weight</th>
                <th>Location</th>
                <th>Warehouse</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in stockItems)
            {
            <tr>
                <td>@item.ItemId</td>
                <td>@item.ItemName</td>
                <td>@item.ItemDescription</td>
                <td>@item.Quantity</td>
                <td>@item.Weight</td>
                <td>@item.LocationName</td>
                <td>@item.WarehouseName</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<StockVM> stockItems;
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        var client = _clientFactory.CreateClient(DataSource.WAREHOUSE_API);
        var url = "Stock/GetAllWarehouseStock?warehouseId=1";

        try
        {
            stockItems = await client.GetFromJsonAsync<IEnumerable<StockVM>>(url);
            errorString = string.Empty;
        }
        catch (Exception ex)
        {
            errorString = ex.Message;
        }
    }
}
