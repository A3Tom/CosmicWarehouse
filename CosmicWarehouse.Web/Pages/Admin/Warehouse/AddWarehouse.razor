@page "/admin/addwarehouse"

@using System.Text
@using System.Text.Json
@using Models
@using CosmicWarehouse.Domain.Models

@inject IHttpClientFactory _clientFactory
@inject NavigationManager _navigationManager

<h1>@pageTitle</h1>

@if (!string.IsNullOrEmpty(errorString))
{
    <p>
        <div class="alert-danger">@errorString</div>
    </p>
}
else
{
    <EditForm EditContext="@editContext" OnSubmit="@HandleSubmit">

        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroup-sizing-default">Warehouse Name</span>
            </div>
            <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default" @bind-value="newWarehouse.Name">
        </div>

        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroup-sizing-default">Description</span>
            </div>
            <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default" @bind-value="newWarehouse.Description">
        </div>

        <div>
            <button type="submit" class="btn btn-success">Add Warehouse</button>
        </div>

    </EditForm>
}

@code {
    private string pageTitle = "Add warehouse";
    private HttpClient client;

    private string errorString;

    private WarehouseDto newWarehouse = new();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(newWarehouse);
        client = _clientFactory.CreateClient(DataSource.WAREHOUSE_API);
    }

    private async Task HandleSubmit()
    {
        var isValid = editContext.Validate();

        if (isValid)
        {
            //TODO : Make this a static method in its own class to call from wherever
            var url = $"Warehouse/AddWarehouse";
            var payload = new StringContent(
                JsonSerializer.Serialize(newWarehouse),
                Encoding.UTF8,
                "application/json");

            using var response = await client.PostAsync(url, payload);

            if (response.IsSuccessStatusCode)
            {
                _navigationManager.NavigateTo("admin/warehouse");
            }
            else
            {
                errorString = response.ReasonPhrase;
            }
        }
        else
        {
            errorString = "Invalid";
        }
    }

}